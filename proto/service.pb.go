// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Item struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Quantity             int64    `protobuf:"varint,2,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Item) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type Product struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Quantity             int64    `protobuf:"varint,2,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Price                int64    `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Product) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type Factory struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Factory) Reset()         { *m = Factory{} }
func (m *Factory) String() string { return proto.CompactTextString(m) }
func (*Factory) ProtoMessage()    {}
func (*Factory) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Factory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Factory.Unmarshal(m, b)
}
func (m *Factory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Factory.Marshal(b, m, deterministic)
}
func (m *Factory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Factory.Merge(m, src)
}
func (m *Factory) XXX_Size() int {
	return xxx_messageInfo_Factory.Size(m)
}
func (m *Factory) XXX_DiscardUnknown() {
	xxx_messageInfo_Factory.DiscardUnknown(m)
}

var xxx_messageInfo_Factory proto.InternalMessageInfo

func (m *Factory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Item)(nil), "proto.Item")
	proto.RegisterType((*Product)(nil), "proto.Product")
	proto.RegisterType((*Factory)(nil), "proto.Factory")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8f, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0x59, 0xbb, 0xed, 0xae, 0xe3, 0x3f, 0x18, 0x44, 0x96, 0x82, 0x50, 0x72, 0x2a, 0x2a,
	0x3d, 0x28, 0xf8, 0x02, 0x82, 0xe0, 0xa1, 0xba, 0x2e, 0xfa, 0x00, 0x31, 0x0e, 0xb8, 0xb8, 0xed,
	0x94, 0xc9, 0xa4, 0xd0, 0x87, 0xf0, 0x9d, 0xc5, 0x34, 0xec, 0xa5, 0x5e, 0x7a, 0x4a, 0x7e, 0x7c,
	0xbf, 0x7c, 0xe4, 0x83, 0x13, 0x4f, 0xb2, 0x6e, 0x1d, 0xcd, 0x56, 0xc2, 0xca, 0x38, 0x8c, 0x87,
	0xb9, 0x87, 0xfc, 0x49, 0x69, 0x81, 0x08, 0xf9, 0xb3, 0x5d, 0x50, 0x95, 0x4d, 0xb2, 0xe9, 0x61,
	0x13, 0xef, 0x38, 0x86, 0xf2, 0x35, 0xd8, 0xa5, 0xb6, 0xba, 0xa9, 0x0e, 0x26, 0xd9, 0x74, 0xd0,
	0xf4, 0x6c, 0x5e, 0xa0, 0xa8, 0x85, 0x3f, 0x83, 0xd3, 0x7d, 0x9f, 0xe2, 0x39, 0x0c, 0x6b, 0x69,
	0x1d, 0x55, 0x83, 0x18, 0x6c, 0xc1, 0x5c, 0x42, 0xf1, 0x68, 0x9d, 0xb2, 0x6c, 0xfe, 0x2b, 0x34,
	0x06, 0xca, 0x86, 0xfc, 0x8a, 0x97, 0x9e, 0xf0, 0x02, 0x46, 0x42, 0x3e, 0x74, 0x9a, 0x8c, 0x44,
	0xb7, 0x3f, 0x19, 0xe4, 0xef, 0x9e, 0x04, 0x6f, 0xe0, 0x78, 0xce, 0x6b, 0x7a, 0xe3, 0xb9, 0x95,
	0x6f, 0x52, 0x3c, 0xda, 0x6e, 0x9e, 0xfd, 0x2d, 0x1d, 0x9f, 0x25, 0xe8, 0xeb, 0xae, 0xa1, 0xac,
	0x83, 0xb8, 0x2f, 0xeb, 0x09, 0x4f, 0x53, 0x98, 0xb6, 0xed, 0xca, 0x57, 0x50, 0x3c, 0x70, 0xd7,
	0x91, 0xd3, 0xde, 0x4d, 0xdf, 0xde, 0x71, 0x3f, 0x46, 0x91, 0xef, 0x7e, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xb1, 0x92, 0x6d, 0xcc, 0x7a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	MoveToMarket(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Response, error)
	Purchase(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Response, error)
	Collect(ctx context.Context, in *Factory, opts ...grpc.CallOption) (*Response, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) MoveToMarket(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.User/MoveToMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Purchase(ctx context.Context, in *Product, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.User/Purchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Collect(ctx context.Context, in *Factory, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.User/Collect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	MoveToMarket(context.Context, *Item) (*Response, error)
	Purchase(context.Context, *Product) (*Response, error)
	Collect(context.Context, *Factory) (*Response, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) MoveToMarket(ctx context.Context, req *Item) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveToMarket not implemented")
}
func (*UnimplementedUserServer) Purchase(ctx context.Context, req *Product) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Purchase not implemented")
}
func (*UnimplementedUserServer) Collect(ctx context.Context, req *Factory) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Collect not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_MoveToMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).MoveToMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.User/MoveToMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).MoveToMarket(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Purchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Purchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.User/Purchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Purchase(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Collect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Factory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Collect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.User/Collect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Collect(ctx, req.(*Factory))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MoveToMarket",
			Handler:    _User_MoveToMarket_Handler,
		},
		{
			MethodName: "Purchase",
			Handler:    _User_Purchase_Handler,
		},
		{
			MethodName: "Collect",
			Handler:    _User_Collect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
